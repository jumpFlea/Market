<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- 配置使用注解 -->
	<!-- 而Spring为我们提供了一种极为方便注册这些BeanPostProcessor的方式， 即使用<context:annotation-
		config/>隐式地向 Spring容器注册 -->
	<context:annotation-config />
	<context:component-scan base-package="com.qst"/>

	<!-- 1. 数据源 : DriverManagerDataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://139.199.10.223:3306/fleamarket?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="flea" />
		<property name="password" value="market" />
		<!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/fleaMarket?useUnicode=true&amp;characterEncoding=utf8" />-->
		<!--<property name="username" value="root" />-->
		<!--<property name="password" value="d" />-->
	</bean>

	<!-- 需要这样对MyBatis和Spring进行集成，把sqlSessionFactory交给Spring管理 -->
	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource / typeAliasesPackage -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.qst.model" />
	</bean>

	<!-- 3. mybatis自动扫描加载Sql映射文件 : MapperScannerConfigurer sqlSessionFactory
		/ basePackage -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.qst.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

</beans>